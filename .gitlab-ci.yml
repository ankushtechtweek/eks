#stages:
#  #- quality
#  - build
#  - deploy
#
#services:
#  - docker:dind
#
#build:
#  stage: build
#  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
#  environment:
#    name: test
#  script:
#    - aws ecr get-login-password --region us-east-2 |  docker login --username AWS --password-stdin 068668040281.dkr.ecr.us-east-2.amazonaws.com
#    - docker build -f Dockerfile -t 068668040281.dkr.ecr.us-east-2.amazonaws.com/ui:${CI_COMMIT_SHORT_SHA:0:6} .
#    - docker push  068668040281.dkr.ecr.us-east-2.amazonaws.com/ui:${CI_COMMIT_SHORT_SHA:0:6}
#  tags:
#    - test
#
#deploy:
#  stage: deploy
#  image: jshimko/kube-tools-aws
#  environment:
#    name: test
#  script:
#    - aws eks update-kubeconfig --name ps-eks-fargate-test --region us-east-2
#    - version=${CI_COMMIT_SHORT_SHA:0:6}
#    - helm upgrade -i deployment-ui ui --set image.tag=${CI_COMMIT_SHORT_SHA:0:6} -f ui/configs/test-values.yaml
#  tags:
#    - test

# sonarqube-check:
#   stage: quality
#   image:
#     name: sonarsource/sonar-scanner-cli:latest
#     entrypoint: [""]
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#     GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script:
#     - sonar-scanner
#   allow_failure: true
#   only:
#     - merge_requests
#     - test # or the name of your main branch
#     - prod

stages:
  - quality
  - build
  - deploy

services:
  - docker:dind

echo-environment:
  stage: quality
  environment:
    name: stage
  script:
    - echo stage
    - echo ${CI_DOCKER_REPOSITORY}
    - echo ${CI_COMMIT_SHORT_SHA}
    - echo ${CI_TARGET_PS_EKS_FARGATE}
    - echo ${CI_NAMESPACE}
    - echo ${CI_UI_CONFIG_VALUES}
  tags:
    - stage

build:
   stage: build
   image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
   environment:
     name: stage
   script:
     - aws ecr get-login-password --region us-east-2 |  docker login --username AWS --password-stdin ${CI_DOCKER_REPOSITORY}
     - cp client/src/environments/environment.stage.ts client/src/environments/environment.ts
     - docker build -f Dockerfile -t ${CI_DOCKER_REPOSITORY}/ui:${CI_COMMIT_SHORT_SHA:0:6} .
     - docker push  ${CI_DOCKER_REPOSITORY}/ui:${CI_COMMIT_SHORT_SHA:0:6}
   tags:
   - stage

deploy:
   stage: deploy
   image: jshimko/kube-tools-aws
   environment:
     name: stage
   script:
#    - aws eks update-kubeconfig --name ps-eks-fargate-test --region us-east-2
    - aws eks update-kubeconfig --name ${CI_TARGET_PS_EKS_FARGATE} --region us-east-2
    - version=${CI_COMMIT_SHORT_SHA:0:6}
#    - helm upgrade -i deployment-ui ui --set image.tag=${CI_COMMIT_SHORT_SHA:0:6} -f ui/configs/test-values.yaml
    - helm upgrade -i deployment-ui ui ${CI_NAMESPACE} --set image.tag=${CI_COMMIT_SHORT_SHA:0:6} -f ${CI_UI_CONFIG_VALUES}
   tags:
   - stage

# sonarqube-check:
#   stage: quality
#   image: 
#     name: sonarsource/sonar-scanner-cli:latest
#     entrypoint: [""]
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#     GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script: 
#     - sonar-scanner
#   allow_failure: true
#   only:
#     - merge_requests
#     - test # or the name of your main branch
#     - prod
